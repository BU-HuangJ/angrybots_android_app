package com.group3.angrybots;

import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.support.v4.app.NavUtils;

public class RobotSettings extends RobotActivity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_robot_settings);
		// Show the Up button in the action bar.
		getActionBar().setDisplayHomeAsUpEnabled(true);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.activity_robot_settings, menu);
		return true;
	}

	@Override
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case android.R.id.home:
			// This ID represents the Home or Up button. In the case of this
			// activity, the Up button is shown. Use NavUtils to allow users
			// to navigate up one level in the application structure. For
			// more details, see the Navigation pattern on Android Design:
			//
			// http://developer.android.com/design/patterns/navigation.html#up-vs-back
			//
			NavUtils.navigateUpFromSameTask(this);
			return true;
		}
		return super.onOptionsItemSelected(item);
	}
	
	@Override
	protected void onResume() { 
		super.onResume();
		this.flipTopHat(findViewById(R.id.robot_flip_top_hat));
		this.flipMonocle(findViewById(R.id.robot_flip_monocle));
		this.flipCowboyHat(findViewById(R.id.robot_flip_cowboy_hat));
		this.flipMustache(findViewById(R.id.robot_flip_mustache));
	}
	
	protected void flip(View view, boolean flipped) {
		if (flipped) {
			view.setBackgroundResource(R.drawable.robot_setting_button_on);
		} else {
			view.setBackgroundResource(R.drawable.robot_setting_button_off);
		}
	}
	
	protected void flipTopHat(View view) {
		adapters.PersistentSettings.getPreferenceActivity().robotTopHat ^= true;
		this.flip(view, adapters.PersistentSettings.getPreferenceActivity().robotTopHat);
	}
	
	protected void flipMonocle(View view) {
		adapters.PersistentSettings.getPreferenceActivity().robotMonocle ^= true;
		this.flip(view, adapters.PersistentSettings.getPreferenceActivity().robotMonocle);
	}
	
	protected void flipCowboyHat(View view) {
		adapters.PersistentSettings.getPreferenceActivity().robotCowboyHat ^= true;
		this.flip(view, adapters.PersistentSettings.getPreferenceActivity().robotCowboyHat);
	}
	
	protected void flipMustache(View view) {
		adapters.PersistentSettings.getPreferenceActivity().robotMustache ^= true;
		this.flip(view, adapters.PersistentSettings.getPreferenceActivity().robotMustache);
	}

}
